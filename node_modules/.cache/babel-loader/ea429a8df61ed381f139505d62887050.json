{"ast":null,"code":"const API_BASE = \"http://localhost:9090/lighting/api/cart\";\n\n// Store latest cartToken and version from API responses\nlet cartToken = undefined;\nlet cartVersion = undefined;\n\n// Helper to build If-Match header value\nfunction buildIfMatch() {\n  if (!cartToken || typeof cartVersion !== \"number\") return undefined;\n  return `cart-${cartToken}-v${cartVersion}`;\n}\nconst headers = ifMatch => {\n  const base = {\n    \"Content-Type\": \"application/json\"\n  };\n  if (ifMatch) base[\"If-Match\"] = ifMatch;\n  return base;\n};\n\n// --- Fetch Cart (no If-Match header) ---\nexport async function fetchCart() {\n  const res = await fetch(API_BASE, {\n    credentials: \"include\",\n    headers: headers()\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch cart\");\n  const data = await res.json();\n  cartToken = data.cartToken; // <-- Store latest cartToken from response\n  cartVersion = data.version;\n  return data;\n}\n\n// --- Add to Cart ---\nexport async function addToCart(productId, quantity) {\n  const ifMatch = buildIfMatch();\n  const res = await fetch(`${API_BASE}/items`, {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: headers(ifMatch),\n    body: JSON.stringify({\n      productId,\n      quantity\n    })\n  });\n  if (!res.ok) throw new Error(\"Failed to add to cart\");\n  const data = await res.json();\n  cartToken = data.cartToken; // <-- Store latest cartToken from response\n  cartVersion = data.version;\n  return data;\n}\n\n// --- Update Cart Item ---\nexport async function updateCartItem(itemId, quantity) {\n  const ifMatch = buildIfMatch();\n  const res = await fetch(`${API_BASE}/items/${itemId}`, {\n    method: \"PUT\",\n    credentials: \"include\",\n    headers: headers(ifMatch),\n    body: JSON.stringify({\n      quantity\n    })\n  });\n  if (!res.ok) throw new Error(\"Failed to update cart item\");\n  const data = await res.json();\n  cartToken = data.cartToken; // <-- Store latest cartToken from response\n  cartVersion = data.version;\n  return data;\n}\n\n// --- Remove Cart Item ---\nexport async function removeCartItem(itemId) {\n  const ifMatch = buildIfMatch();\n  const res = await fetch(`${API_BASE}/items/${itemId}`, {\n    method: \"DELETE\",\n    credentials: \"include\",\n    headers: headers(ifMatch)\n  });\n  if (!res.ok) throw new Error(\"Failed to remove cart item\");\n  const data = await res.json();\n  cartToken = data.cartToken; // <-- Store latest cartToken from response\n  cartVersion = data.version;\n  return data;\n}\n\n// --- Clear Cart ---\nexport async function clearCart() {\n  const ifMatch = buildIfMatch();\n  const res = await fetch(`${API_BASE}/items`, {\n    method: \"DELETE\",\n    credentials: \"include\",\n    headers: headers(ifMatch)\n  });\n  if (!res.ok) throw new Error(\"Failed to clear cart\");\n  const data = await res.json();\n  cartToken = data.cartToken; // <-- Store latest cartToken from response\n  cartVersion = data.version;\n  return data;\n}","map":{"version":3,"names":["API_BASE","cartToken","undefined","cartVersion","buildIfMatch","headers","ifMatch","base","fetchCart","res","fetch","credentials","ok","Error","data","json","version","addToCart","productId","quantity","method","body","JSON","stringify","updateCartItem","itemId","removeCartItem","clearCart"],"sources":["/Users/meghana/Desktop/social-login-app/src/components/api/CartApi.tsx"],"sourcesContent":["const API_BASE = \"http://localhost:9090/lighting/api/cart\";\n\n// Store latest cartToken and version from API responses\nlet cartToken: string | undefined = undefined;\nlet cartVersion: number | undefined = undefined;\n\n// Helper to build If-Match header value\nfunction buildIfMatch() {\n  if (!cartToken || typeof cartVersion !== \"number\") return undefined;\n  return `cart-${cartToken}-v${cartVersion}`;\n}\n\nconst headers = (ifMatch?: string) => {\n  const base: Record<string, string> = {\n    \"Content-Type\": \"application/json\",\n  };\n  if (ifMatch) base[\"If-Match\"] = ifMatch;\n  return base;\n};\n\n// --- Fetch Cart (no If-Match header) ---\nexport async function fetchCart() {\n  const res = await fetch(API_BASE, {\n    credentials: \"include\",\n    headers: headers(),\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch cart\");\n  const data = await res.json();\n  cartToken = data.cartToken;   // <-- Store latest cartToken from response\n  cartVersion = data.version;\n  return data;\n}\n\n// --- Add to Cart ---\nexport async function addToCart(productId: string, quantity: number) {\n  const ifMatch = buildIfMatch();\n  const res = await fetch(`${API_BASE}/items`, {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: headers(ifMatch),\n    body: JSON.stringify({ productId, quantity }),\n  });\n  if (!res.ok) throw new Error(\"Failed to add to cart\");\n  const data = await res.json();\n  cartToken = data.cartToken;   // <-- Store latest cartToken from response\n  cartVersion = data.version;\n  return data;\n}\n\n// --- Update Cart Item ---\nexport async function updateCartItem(itemId: string, quantity: number) {\n  const ifMatch = buildIfMatch();\n  const res = await fetch(`${API_BASE}/items/${itemId}`, {\n    method: \"PUT\",\n    credentials: \"include\",\n    headers: headers(ifMatch),\n    body: JSON.stringify({ quantity }),\n  });\n  if (!res.ok) throw new Error(\"Failed to update cart item\");\n  const data = await res.json();\n  cartToken = data.cartToken;   // <-- Store latest cartToken from response\n  cartVersion = data.version;\n  return data;\n}\n\n// --- Remove Cart Item ---\nexport async function removeCartItem(itemId: string) {\n  const ifMatch = buildIfMatch();\n  const res = await fetch(`${API_BASE}/items/${itemId}`, {\n    method: \"DELETE\",\n    credentials: \"include\",\n    headers: headers(ifMatch),\n  });\n  if (!res.ok) throw new Error(\"Failed to remove cart item\");\n  const data = await res.json();\n  cartToken = data.cartToken;   // <-- Store latest cartToken from response\n  cartVersion = data.version;\n  return data;\n}\n\n// --- Clear Cart ---\nexport async function clearCart() {\n  const ifMatch = buildIfMatch();\n  const res = await fetch(`${API_BASE}/items`, {\n    method: \"DELETE\",\n    credentials: \"include\",\n    headers: headers(ifMatch),\n  });\n  if (!res.ok) throw new Error(\"Failed to clear cart\");\n  const data = await res.json();\n  cartToken = data.cartToken;   // <-- Store latest cartToken from response\n  cartVersion = data.version;\n  return data;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}