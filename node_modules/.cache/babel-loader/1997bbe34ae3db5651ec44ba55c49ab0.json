{"ast":null,"code":"const API_BASE = \"http://localhost:9090/lighting/api/cart\";\nconst getToken = () => {\n  var _document$cookie$matc;\n  return (_document$cookie$matc = document.cookie.match(/cart_token=([^;]+)/)) === null || _document$cookie$matc === void 0 ? void 0 : _document$cookie$matc[1];\n};\n\n// Helper to build If-Match header value\nfunction buildIfMatch(cartToken, version) {\n  if (!cartToken || typeof version !== \"number\") return undefined;\n  return `cart-${cartToken}-v${version}`;\n}\nconst headers = ifMatch => {\n  const base = {\n    \"Content-Type\": \"application/json\"\n  };\n  if (ifMatch) base[\"If-Match\"] = ifMatch;\n  return base;\n};\n\n// --- Cart Version State (in-memory, update after every cart mutation) ---\nlet cartVersion = undefined;\n\n// --- Fetch Cart (no If-Match header) ---\nexport async function fetchCart() {\n  const res = await fetch(API_BASE, {\n    credentials: \"include\",\n    headers: headers()\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch cart\");\n  const data = await res.json();\n  // Save latest version for future mutations\n  cartVersion = data.version;\n  return data;\n}\n\n// --- Add to Cart ---\nexport async function addToCart(productId, quantity) {\n  const cartToken = getToken();\n  const ifMatch = buildIfMatch(cartToken, cartVersion);\n  const res = await fetch(`${API_BASE}/items`, {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: headers(ifMatch),\n    body: JSON.stringify({\n      productId,\n      quantity\n    })\n  });\n  if (!res.ok) throw new Error(\"Failed to add to cart\");\n  const data = await res.json();\n  cartVersion = data.version;\n  return data;\n}\n\n// --- Update Cart Item ---\nexport async function updateCartItem(itemId, quantity) {\n  const cartToken = getToken();\n  const ifMatch = buildIfMatch(cartToken, cartVersion);\n  const res = await fetch(`${API_BASE}/items/${itemId}`, {\n    method: \"PUT\",\n    credentials: \"include\",\n    headers: headers(ifMatch),\n    body: JSON.stringify({\n      quantity\n    })\n  });\n  if (!res.ok) throw new Error(\"Failed to update cart item\");\n  const data = await res.json();\n  cartVersion = data.version;\n  return data;\n}\n\n// --- Remove Cart Item ---\nexport async function removeCartItem(itemId) {\n  const cartToken = getToken();\n  const ifMatch = buildIfMatch(cartToken, cartVersion);\n  const res = await fetch(`${API_BASE}/items/${itemId}`, {\n    method: \"DELETE\",\n    credentials: \"include\",\n    headers: headers(ifMatch)\n  });\n  if (!res.ok) throw new Error(\"Failed to remove cart item\");\n  const data = await res.json();\n  cartVersion = data.version;\n  return data;\n}\n\n// --- Clear Cart ---\nexport async function clearCart() {\n  const cartToken = getToken();\n  const ifMatch = buildIfMatch(cartToken, cartVersion);\n  const res = await fetch(`${API_BASE}/items`, {\n    method: \"DELETE\",\n    credentials: \"include\",\n    headers: headers(ifMatch)\n  });\n  if (!res.ok) throw new Error(\"Failed to clear cart\");\n  const data = await res.json();\n  cartVersion = data.version;\n  return data;\n}","map":{"version":3,"names":["API_BASE","getToken","_document$cookie$matc","document","cookie","match","buildIfMatch","cartToken","version","undefined","headers","ifMatch","base","cartVersion","fetchCart","res","fetch","credentials","ok","Error","data","json","addToCart","productId","quantity","method","body","JSON","stringify","updateCartItem","itemId","removeCartItem","clearCart"],"sources":["/Users/meghana/Desktop/social-login-app/src/components/api/CartApi.tsx"],"sourcesContent":["const API_BASE = \"http://localhost:9090/lighting/api/cart\";\nconst getToken = () => document.cookie.match(/cart_token=([^;]+)/)?.[1];\n\n// Helper to build If-Match header value\nfunction buildIfMatch(cartToken: string | undefined, version: number | undefined) {\n  if (!cartToken || typeof version !== \"number\") return undefined;\n  return `cart-${cartToken}-v${version}`;\n}\n\nconst headers = (ifMatch?: string) => {\n  const base: Record<string, string> = {\n    \"Content-Type\": \"application/json\",\n  };\n  if (ifMatch) base[\"If-Match\"] = ifMatch;\n  return base;\n};\n\n// --- Cart Version State (in-memory, update after every cart mutation) ---\nlet cartVersion: number | undefined = undefined;\n\n// --- Fetch Cart (no If-Match header) ---\nexport async function fetchCart() {\n  const res = await fetch(API_BASE, {\n    credentials: \"include\",\n    headers: headers(),\n  });\n  if (!res.ok) throw new Error(\"Failed to fetch cart\");\n  const data = await res.json();\n  // Save latest version for future mutations\n  cartVersion = data.version;\n  return data;\n}\n\n// --- Add to Cart ---\nexport async function addToCart(productId: string, quantity: number) {\n  const cartToken = getToken();\n  const ifMatch = buildIfMatch(cartToken, cartVersion);\n  const res = await fetch(`${API_BASE}/items`, {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: headers(ifMatch),\n    body: JSON.stringify({ productId, quantity }),\n  });\n  if (!res.ok) throw new Error(\"Failed to add to cart\");\n  const data = await res.json();\n  cartVersion = data.version;\n  return data;\n}\n\n// --- Update Cart Item ---\nexport async function updateCartItem(itemId: string, quantity: number) {\n  const cartToken = getToken();\n  const ifMatch = buildIfMatch(cartToken, cartVersion);\n  const res = await fetch(`${API_BASE}/items/${itemId}`, {\n    method: \"PUT\",\n    credentials: \"include\",\n    headers: headers(ifMatch),\n    body: JSON.stringify({ quantity }),\n  });\n  if (!res.ok) throw new Error(\"Failed to update cart item\");\n  const data = await res.json();\n  cartVersion = data.version;\n  return data;\n}\n\n// --- Remove Cart Item ---\nexport async function removeCartItem(itemId: string) {\n  const cartToken = getToken();\n  const ifMatch = buildIfMatch(cartToken, cartVersion);\n  const res = await fetch(`${API_BASE}/items/${itemId}`, {\n    method: \"DELETE\",\n    credentials: \"include\",\n    headers: headers(ifMatch),\n  });\n  if (!res.ok) throw new Error(\"Failed to remove cart item\");\n  const data = await res.json();\n  cartVersion = data.version;\n  return data;\n}\n\n// --- Clear Cart ---\nexport async function clearCart() {\n  const cartToken = getToken();\n  const ifMatch = buildIfMatch(cartToken, cartVersion);\n  const res = await fetch(`${API_BASE}/items`, {\n    method: \"DELETE\",\n    credentials: \"include\",\n    headers: headers(ifMatch),\n  });\n  if (!res.ok) throw new Error(\"Failed to clear cart\");\n  const data = await res.json();\n  cartVersion = data.version;\n  return data;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}